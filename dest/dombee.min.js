var Dombee=function(){"use strict";function e(e,t){const n="function"==typeof e?e.toString():e;return Object.keys(t).filter(e=>n.match(new RegExp("\\b"+e+"\\b")))}function t(e,t){const n=Object.keys(t);return Function(...n,"return "+e+";")}function n(e,t){const n=Object.keys(t);return Function(...n,"return `"+e+"`;")}let o,s="production";function i(e,t,n){e&&function(e,t){if("development"==s)throw t;throw new Error(e)}(t,n)}function r(e,{state:t,values:n}){i(null==e,"Dombee.directive(config) failed. The first parameter must be a config object or function, but is null.","directive-config=null");let o=e;return"function"==typeof e&&(o=e({state:t,data:n}),i(null==o,`Dombee.directive(config) failed. First parameter is a function (${e}) but it returns null. Did you forget to return the configuration?`,"directiveIsNull"),o.name=e.name),i(null==o.onChange,'Dombee.directive(config) failed. Your directive config needs property "onChange" to be initialized successfully.',"directive.onChangeIsNull"),i("function"!=typeof o.onChange,"Dombee.directive(config) failed. config.onChange must be a function.","directive.onChangeNoFunction"),i(null==o.expressions,"Dombee.directive(config) failed. config.expressions must be a function. But it is null.","directive.expressionsIsNull"),i("function"!=typeof o.expressions,"Dombee.directive(config) failed. config.expressions must be a function. But it is typeof "+typeof e.expressions,"directive.expressionsIsNotAFunction"),null==o.bindTo&&(o.bindTo="*"),i("string"!=typeof o.bindTo,"Dombee.directive(config) failed. config.bindTo must be a string. But it is typeof "+typeof e.bindTo,"directive.bindToNotString"),o}function a(e="",t,n,o){const s=Object.values(n);return("string"==typeof e?function(e,t,n){for(let o of t)try{if(null==o.fn)throw`Expressiontype "${o.key}" does not exist. If the name is correct, please add it with "Dombee.addExpressionType('${expressionTypeKey}', function(text,values){/*your code here*/})"`;return o.fn(e,n)}catch(e){if("string"==typeof e)throw new Error(e)}throw new Error(`Expression "${e}" can not be parsed.`)}(e,t,o):e)(...s)}function c(e=""){return e+Math.random().toString(36).substring(2,15)}const u=new function(e={}){let t=e;const n=function(e,n){if(n&&!e)throw new Error('Error in Cache: key is null but value is defined. cache(null,"value"). But it should be: cache(), cache(key),cache(key,value)');return e&&t[e]?t[e]:(n&&(t[e]="function"==typeof n?n():n),e?t[e]:t)};return n.reset=function(){t={}},n};function d(){o={directives:[],directivesObj:{},noDirectives:{},events:{onload:[]},dependencyEvaluationStrategy:e,expressionTypes:{js:t,"js-template-string":n},defaultExpressionTypes:["js","js-template-string"]},u.reset()}function l(e){const t={_localDumbeeCache:!0,bindings:{},dependencies:{},stateDependencies:{}};e=function(e={}){null==e.data&&(e.data={});return e}(e),function(e){s=e}(l.errorMode||"production");const n=function(e){const t=l.documentMock||document;let n=t.createElement("div");return function(e){try{return null!=e.tagName}catch(e){return!1}}(e.bindTo)&&(n=e.bindTo),e.bindTo&&(n=t.querySelector(e.bindTo)),e.template&&(n.innerHTML=e.template),n}(e),i=new Proxy(e.data,{set(e,n,o){e[n]=o,u.reset(),y(e,n,o);for(let o of t.stateDependencies[n]||[])y(e,o,i[o]);return!0},get:(e,t)=>e[t]});for(let e of o.events.onload)e({cache:t,state:i,$root:n});function d(e="",n,s={},r){const a=e.expression?e.expression.toString():e.toString(),u=o.dependencyEvaluationStrategy(a,i),d=function(e){return e&&e.expressionTypes?Array.isArray(e.expressionTypes)?e.expressionTypes:[e.expressionTypes]:o.defaultExpressionTypes}(s),l=c("id");for(let o of u)t.dependencies[o]||(t.dependencies[o]=[]),o!==n&&(t.dependencies[o].push(l),t.bindings[l]={name:n,$elem:r,onChange:s.onChange,resultFn:e.expression?e.expression:e,expressionTypes:d,expression:e,expressionTypes:d})}function f(e){const t={};return Object.keys(i).forEach(n=>{let o=i[n],s=o;"function"==typeof o&&(o=o(i),s=o),null==o&&(s="''"),"string"==typeof o&&e&&(s=`'${o}'`),"object"==typeof o&&e&&(s=JSON.stringify(o)),t[n]=s}),t}function p(e){const t=e.toLowerCase();let n=o.directivesObj[t];if(n)return n;if(o.noDirectives[t])return[];for(let t of Object.keys(o.directivesObj))if(e.startsWith(t))return o.directivesObj[t];return o.noDirectives[t]=!0,[]}for(let e of o.directives){const t=r(e,{$root:n,state:i,values:f}),s=t.bindTo.toLowerCase();o.directivesObj[s]||(o.directivesObj[s]=[]),o.directivesObj[s].push(t)}n.querySelectorAll("*").forEach(e=>{e.dataset||(e.dataset={});const t=p("*");for(let n of t){n.onElemLoad&&n.onElemLoad(e,n);let t=n.expressions(e);if(null!=t){Array.isArray(t)||(t=[t]);for(let o of t)o&&d(o,0,n,e)}}for(let t of e.attributes){const n=p(t.name);for(let t of n){let n=t.expressions(e);if(null!=n){Array.isArray(n)||(n=[n]);for(let o of n)o&&d(o,0,t,e)}}}});const y=(e,s,i)=>{function r(e="",t,n){const s=t||e.toString();return u(s,()=>a(e,n.map(e=>({key:e,fn:o.expressionTypes[e]})),f(),f("parsable")))}const c=t.dependencies[s]||[];for(let e of c){const o=t.bindings[e],a=o.$elem,c=r(o.resultFn,o.expression,o.expressionTypes);o.onChange&&o.onChange(a,c,{values:f,property:s,value:i,expression:o.expression,$root:n,compile:r})}};return Object.keys(i).forEach(e=>{if("function"==typeof i[e]){const n=i[e],s=o.dependencyEvaluationStrategy(n,i).filter(t=>t!=e);for(let n of s)t.stateDependencies[n]||(t.stateDependencies[n]=[]),t.stateDependencies[n].push(e)}y(i,e,i[e])}),{state:i,values:f(),watch:function(e,t){},cache:t,$root:n}}function f(e){o.events.onload.push(e)}function p(e){o.directives.push(e)}return d(),Object.assign(l,{directive:p,dependencyEvaluationStrategy:function(e){if(null==e)throw new Error("fn is null but must be a function;");l.dependencyEvaluationStrategy=e},dependencyEvaluationStrategyDefault:e,addExpressionType:function(e,t){if(i(null==e,"addExpressionType(name,fn) failed.  Name is undefined","addExpressionTypeNameUndefined"),null==t)throw new Error("addExpressionType(name,fn) failed. Function fn is undefined");if(getScope(this).globalCache.expressionTypes[e])throw new Error("addExpressionType(name,fn) failed. Expressiontype "+e+" already exists an can not be overwritten. Please choose another name");l.expressionTypes[e]=t},expressionTypeJs:t,expressionTypeJsTemplateString:n,addPlugin:function(e){e(l)},onLoad:f,globalCache:o,reset:d,_id:c()}),p({name:"inputElementCheckboxes",bindTo:"data-model",expressions:e=>{if("input"!=!e.tagName&&"checkbox"==e.getAttribute("type"))return e.dataset.model},onChange(e,t,{property:n,value:o}){o?e.setAttribute("checked","checked"):e.removeAttribute("checked")}}),p((function(){return{bindTo:"data-model",expressions:e=>{if("input"!=!e.tagName&&"radio"!=e.getAttribute("type"))return e.dataset.model},onChange(e,t,{property:n,value:o}){e.value=o}}})),p((function(){return{bindTo:"data-model",expressions:e=>{if("input"!=!e.tagName&&"radio"===e.getAttribute("type"))return e.dataset.model},onChange(e,t,{property:n,value:o}){e.value==o&&e.setAttribute("checked","checked")}}})),p((function(){return{expressionTypes:"js",bindTo:"*",onElemLoad(e){e.dombeeTemplates=Array.from(e.childNodes).map(e=>3==e.nodeType?e.nodeValue:null)},expressions:e=>{const t=[];for(let n of e.childNodes){if(3!=n.nodeType)continue;if(!n.nodeValue.includes("{{"))continue;const e=[...n.nodeValue.matchAll(/{{.*?}}/g)].map(e=>({expression:e[0].replace("{{","").replace("}}",""),raw:e[0]}));t.push(...e)}return e.dombeeInterpolations=t,t},onChange(e,t,{compile:n}){for(let t in e.childNodes){const o=e.childNodes[t];if(3!=o.nodeType)continue;let s=e.dombeeTemplates[t];if(!s.includes("{{"))continue;const i=[...s.matchAll(/{{(.*?)}}/g)];for(let e of i){const t=e[1],o=n(t,t,["js"]);s=s.replace(e[0],o)}o.nodeValue=s}}}})),p((function(){return{bindTo:"data-html",expressions:e=>e.dataset.html,onChange(e,t,n){e.innerHTML=t}}})),p((function(){return{bindTo:"data-text",expressions:e=>e.dataset.text,onChange(e,t,n){e.textContent=t}}})),p((function(){return{bindTo:"data-bind",expressions:e=>Object.keys(e.attributes).filter(t=>e.attributes[t].name.startsWith("data-bind:")||e.attributes[t].name.startsWith(":")).map(t=>{const n=e.attributes[t].name;return{expression:e.getAttribute(n),attributeName:n.replace("data-bind:","").replace(":","")}}),onChange(e,t,{expression:n}){e.setAttribute(n.attributeName,t)}}})),p((function(){return{bindTo:"data-class",expressions:e=>e.dataset.class,onChange(e,t,n){"object"==typeof t?Object.keys(t).forEach(n=>{t[n]?e.classList.add(n):e.classList.remove(n)}):e.setAttribute("class",t)}}})),p((function(){return{bindTo:"data-style",expressions:e=>e.dataset.style,onChange(e,t,n){"object"==typeof t?Object.keys(t).forEach(n=>{e.style[n]=t[n]}):e.setAttribute("style",t)}}})),p((function(){return{bindTo:"data-style:",expressions:e=>Object.keys(e.dataset).filter(e=>e.startsWith("style:")).map(t=>e.dataset[t]),onChange(e,t,{property:n}){e.style[n]=t}}})),p((function(){return{bindTo:"data-class:",expressions:e=>Object.keys(e.dataset).filter(e=>e.startsWith("class:")).map(t=>({expression:e.dataset[t],classname:t.replace("class:","")})),onChange(e,t,{property:n,value:o,expression:s}){t?e.classList.add(s.classname):e.classList.remove(s.classname)}}})),p((function(){return{bindTo:"data-show",expressions:e=>e.dataset.show,onChange(e,t){e.style.display=t?"block":"none"}}})),f((function({state:e,$root:t}){const n=t.querySelectorAll('[data-model]:not([type="checkbox"])'),o=t.querySelectorAll('input[data-model][type="checkbox"]');for(let t of n)t.addEventListener("keyup",(function(){const n=t.dataset.model;e[n]=t.value})),t.addEventListener("change",(function(){const n=t.dataset.model;e[n]=t.value}));for(let t of o)t.addEventListener("change",(function(){const n=t.dataset.model;e[n]=t.checked}))})),l}();
