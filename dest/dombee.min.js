var Dombee=function(){"use strict";function e(e,t){const n="function"==typeof e?e.toString():e;return Object.keys(t).filter(e=>n.match(new RegExp("\\b"+e+"\\b")))}function t(e,t){const n=Object.keys(t);return Function(...n,"return "+e+";")}function n(e,t){const n=Object.keys(t);return Function(...n,"return `"+e+"`;")}function o(e,{state:t,values:n}){if(null==e)throw new Error("Dombee.directive(config) failed. The first parameter must be a config object or function, but is null.");let o=e;if("function"==typeof e){if(o=e({state:t,data:n}),null==o)throw new Error("Dombee.directive(config) failed. Your first parameter is a function ("+e+") but it returns null. Did you forget to return the configuration?");o.name=e.name}if(null==o.onChange)throw new Error('Dombee.directive(config) failed. Your directive config needs property "onChange" to be initialized successfully.');if("function"!=typeof o.onChange)throw new Error("Dombee.directive(config) failed. config.onChange must be a function.");if("function"!=typeof o.expressions)throw new Error("Dombee.directive(config) failed. config.expressions must be a function. But it is typeof "+typeof e.expressions);return o}function r(e=""){return e+Math.random().toString(36).substring(2,15)}let s;const i=new function(e={}){let t=e;const n=function(e,n){if(n&&!e)throw new Error('Error in Cache: key is null but value is defined. cache(null,"value"). But it should be: cache(), cache(key),cache(key,value)');return e&&t[e]?t[e]:(n&&(t[e]="function"==typeof n?n():n),e?t[e]:t)};return n.reset=function(){t={}},n};function a(){s={directives:[],directivesObj:{},noDirectives:{},events:{onload:[]},dependencyEvaluationStrategy:e,expressionTypes:{js:t,"js-template-string":n},defaultExpressionTypes:["js","js-template-string"]},i.reset()}function c(e){const t={_localDumbeeCache:!0,bindings:{},dependencies:{}},n=function(e){const t=c.documentMock||document;let n=t.createElement("div");return function(e){try{return null!=e.tagName}catch(e){return!1}}(e.bindTo)&&(n=e.bindTo),e.bindTo&&(n=t.querySelector(e.bindTo)),e.template&&(n.innerHTML=e.template),n}(e=function(e={}){null==e.data&&(e.data={});return e}(e)),a=new Proxy(e.data,{set(e,n,o){e[n]=o,i.reset(),y(e,n,o);for(let o of t.dependencies[n])y(e,o,a[o]);return!0},get:(e,t)=>e[t]});for(let e of s.events.onload)e({cache:t,state:a,$root:n});function u(e="",t){const n=f(),o=Object.keys(n).map(e=>n[e]);return("string"==typeof e?d(e,t):e)(...o)}function d(e,t){const n=f("parsable");for(let o of t)try{const t=s.expressionTypes[o];if(null==t)throw`Expressiontype "${o}" does not exist. If the name is correct, please add it with "Dombee.addExpressionType('${o}', function(text,values){/*your code here*/})"`;return t(e,n)}catch(e){if("string"==typeof e)throw new Error(e)}throw new Error(`Expression ${e} can not be parsed.`)}function l(e="",n,o,i={},c){const u=e.expression?e.expression.toString():e.toString(),l=s.dependencyEvaluationStrategy(u,a),f=function(e){return e&&e.expressionTypes?Array.isArray(e.expressionTypes)?e.expressionTypes:[e.expressionTypes]:s.defaultExpressionTypes}(i);for(let s of l)if(t.dependencies[s]||(t.dependencies[s]=[]),s!==n){const a=o?o+"_"+r(""):n;t.dependencies[s].push(a),t.bindings[a]={name:n,$elem:c,onChange:i.onChange,resultFn:d(e.expression?e.expression:e,f),resultFnRaw:e.expression?e.expression:e,expression:e,expressionTypes:f}}}function f(e){const t={};return Object.keys(a).forEach(n=>{let o=a[n],r=o;"function"==typeof o&&(o=o(a),r=o),null==o&&(r="''"),"string"==typeof o&&e&&(r=`'${o}'`),"object"==typeof o&&e&&(r=JSON.stringify(o)),t[n]=r}),t}function p(e){const t=e.toLowerCase();let n=s.directivesObj[t];if(n)return n;if(s.noDirectives[t])return[];for(let t of Object.keys(s.directivesObj))if(e.startsWith(t))return s.directivesObj[t];return s.noDirectives[t]=!0,[]}for(let e of s.directives){const t=o(e,{$root:n,state:a,values:f}),r=t.bindTo.toLowerCase();s.directivesObj[r]||(s.directivesObj[r]=[]),s.directivesObj[r].push(t)}n.querySelectorAll("*").forEach(e=>{e.dataset||(e.dataset={});const t=r("id");for(let n of e.attributes){const o=p(n.name);for(let n of o){let o=n.expressions(e);if(null!=o){Array.isArray(o)||(o=[o]);for(let r of o)r&&l(r,0,t,n,e)}}}});const y=(e,o,r)=>{const s=t.dependencies[o]||[];for(let e of s){const s=t.bindings[e],a=s.$elem,c=i(s.expression,()=>u(s.resultFn,s.expressionTypes));s.onChange&&s.onChange(a,c,{values:f,property:o,value:r,expression:s.expression,$root:n})}};return Object.keys(a).forEach(e=>{"function"==typeof a[e]&&l(a[e],e),y(a,e,a[e])}),{state:a,values:f(),watch:function(e,t){},cache:t,$root:n}}function u(e){s.events.onload.push(e)}function d(e){s.directives.push(e)}return a(),Object.assign(c,{directive:d,dependencyEvaluationStrategy:function(e){if(null==e)throw new Error("fn is null but must be a function;");c.dependencyEvaluationStrategy=e},dependencyEvaluationStrategyDefault:e,addExpressionType:function(e,t){if(null==e)throw new Error("addExpressionType(name,fn) failed.  Name is undefined");if(null==t)throw new Error("addExpressionType(name,fn) failed. Function fn is undefined");if(getScope(this).globalCache.expressionTypes[e])throw new Error("addExpressionType(name,fn) failed. Expressiontype "+e+" already exists an can not be overwritten. Please choose another name");c.expressionTypes[e]=t},expressionTypeJs:t,expressionTypeJsTemplateString:n,addPlugin:function(e){e(c)},onLoad:u,globalCache:s,reset:a,_id:r()}),d({name:"inputElementCheckboxes",bindTo:"data-model",expressions:e=>{if("input"!=!e.tagName&&"checkbox"==e.getAttribute("type"))return e.dataset.model},onChange(e,t,{property:n,value:o}){o?e.setAttribute("checked","checked"):e.removeAttribute("checked")}}),d((function(){return{bindTo:"data-model",expressions:e=>{if("input"!=!e.tagName&&"radio"!=e.getAttribute("type"))return e.dataset.model},onChange(e,t,{property:n,value:o}){e.value=o}}})),d((function(){return{bindTo:"data-model",expressions:e=>{if("input"!=!e.tagName&&"radio"===e.getAttribute("type"))return e.dataset.model},onChange(e,t,{property:n,value:o}){e.value==o&&e.setAttribute("checked","checked")}}})),d((function(){return{bindTo:"data-html",expressions:e=>e.dataset.html,onChange(e,t,n){e.innerHTML=t}}})),d((function(){return{bindTo:"data-text",expressions:e=>e.dataset.text,onChange(e,t,n){e.innerText=t}}})),d((function(){return{bindTo:"data-bind",expressions:e=>Object.keys(e.attributes).filter(t=>e.attributes[t].name.startsWith("data-bind:")||e.attributes[t].name.startsWith(":")).map(t=>{const n=e.attributes[t].name;return{expression:e.getAttribute(n),attributeName:n.replace("data-bind:","").replace(":","")}}),onChange(e,t,{expression:n}){e.setAttribute(n.attributeName,t)}}})),d((function(){return{bindTo:"data-class",expressions:e=>e.dataset.class,onChange(e,t,n){"object"==typeof t?Object.keys(t).forEach(n=>{t[n]?e.classList.add(n):e.classList.remove(n)}):e.setAttribute("class",t)}}})),d((function(){return{bindTo:"data-style",expressions:e=>e.dataset.style,onChange(e,t,n){"object"==typeof t?Object.keys(t).forEach(n=>{e.style[n]=t[n]}):e.setAttribute("style",t)}}})),d((function(){return{bindTo:"data-style:",expressions:e=>Object.keys(e.dataset).filter(e=>e.startsWith("style:")).map(t=>e.dataset[t]),onChange(e,t,{property:n}){e.style[n]=t}}})),d((function(){return{bindTo:"data-class:",expressions:e=>Object.keys(e.dataset).filter(e=>e.startsWith("class:")).map(t=>({expression:e.dataset[t],classname:t.replace("class:","")})),onChange(e,t,{property:n,value:o,expression:r}){t?e.classList.add(r.classname):e.classList.remove(r.classname)}}})),d((function(){return{bindTo:"data-show",expressions:e=>e.dataset.show,onChange(e,t){e.style.display=t?"block":"none"}}})),u((function({state:e,$root:t}){const n=t.querySelectorAll('[data-model]:not([type="checkbox"])'),o=t.querySelectorAll('input[data-model][type="checkbox"]');for(let t of n)t.addEventListener("keyup",(function(){const n=t.dataset.model;e[n]=t.value})),t.addEventListener("change",(function(){const n=t.dataset.model;e[n]=t.value}));for(let t of o)t.addEventListener("change",(function(){const n=t.dataset.model;e[n]=t.checked}))})),c}();
