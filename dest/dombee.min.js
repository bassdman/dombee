var Dombee=function(){"use strict";function e(e,t){const n="function"==typeof e?e.toString():e;return Object.keys(t).filter(e=>n.match(new RegExp("\\b"+e+"\\b")))}function t(e,t){const n=Object.keys(t);return Function(...n,"return "+e+";")}function n(e,t){const n=Object.keys(t);return Function(...n,"return `"+e+"`;")}function s(e=""){return e+Math.random().toString(36).substring(2,15)}const o=function(){function o(e={}){const t={bindings:{},dependencies:{}},n=new Proxy(e,{set(e,s,o){e[s]=o,d(e,s,o);for(let o of t.dependencies[s])d(e,o,n[o]);return!0},get:(e,t)=>e[t]});function r(e="",t){const n=l(),s=Object.keys(n).map(e=>n[e]);return("string"==typeof e?a(e,t):e)(...s)}function a(e,t){const n=l("parsable");for(let s of t)try{const t=o.globalCache.expressionTypes[s];if(null==t)throw`Expressiontype "${s}" does not exist. If the name is correct, please add it with "Dombee.addExpressionType('${s}', function(text,values){/*your code here*/})"`;return t(e,n)}catch(e){if("string"==typeof e)throw new Error(e)}throw new Error(`Expression ${e} can not be parsed.`)}function i(e,r,i,c={}){const l=e.expression?e.expression.toString():e.toString(),d=o.globalCache.dependencyEvaluationStrategy(l,n),u=function(e){return e&&e.expressionTypes?Array.isArray(e.expressionTypes)?e.expressionTypes:[e.expressionTypes]:o.globalCache.defaultExpressionTypes}(c);for(let n of d)if(t.dependencies[n]||(t.dependencies[n]=[]),n!==r){const o=i?i+"_"+s(""):r;t.dependencies[n].push(o),t.bindings[o]={elemid:i,name:r,onChange:c.onChange,resultFn:a(e.expression?e.expression:e,u),resultFnRaw:e.expression?e.expression:e,expression:e,expressionTypes:u}}}function c(e){let t=e;if("function"==typeof t&&(t=t()),null==t)throw new Error("Registerconfig.bindTo returns null but should return a selector, element, Array of elements or function that returns one of these.");return Array.isArray(t)?t:"string"==typeof t?document.querySelectorAll(t):[t]}function l(e){const t={};return Object.keys(n).forEach(s=>{let o=n[s],r=o;"function"==typeof o&&(o=o(n),r=o),null==o&&(r="''"),"string"==typeof o&&e&&(r=`'${o}'`),"object"==typeof o&&e&&(r=JSON.stringify(o)),t[s]=r}),t}for(let e of o.globalCache.directives){let t="function"==typeof e?e({state:n,data:l()}):e;if(t=Object.assign({name:e.name},t),t.onChange){const e=c(t.bindTo);for(let n of e){const e=n.dataset.id||s("id_");null==n.dataset.id&&(n.dataset.id=e);let o=t.expressions(n);Array.isArray(o)||(o=[o]);for(let n of o)i(n,0,e,t)}}}const d=(e,n,s)=>{const o=t.dependencies[n]||[];for(let e of o){const o=t.bindings[e],a=document.querySelector(`[data-id="${o.elemid}"]`),i=r(o.resultFn,o.expressionTypes);o.onChange&&o.onChange(a,i,{values:l,property:n,value:s,expression:o.expression})}};return Object.keys(n).forEach(e=>{"function"==typeof n[e]&&i(n[e],e),d(n,e,n[e])}),{state:n,values:l(),watch:function(e,t){},cache:t}}return o._id=s(),o.globalCache={directives:[],dependencyEvaluationStrategy:e,expressionTypes:{js:t,"js-template-string":n},defaultExpressionTypes:["js","js-template-string"]},o}();function r(e){return null==e?o:e}function a(e){r(this).globalCache.directives.push(e)}return Object.assign(o,{directive:a,dependencyEvaluationStrategy:function(e){if(null==e)throw new Error("fn is null but must be a function;");r(this).dependencyEvaluationStrategy=e},dependencyEvaluationStrategyDefault:e,addExpressionType:function(e,t){if(null==e)throw new Error("addExpressionType(name,fn) failed.  Name is undefined");if(null==t)throw new Error("addExpressionType(name,fn) failed. Function fn is undefined");if(r(this).globalCache.expressionTypes[e])throw new Error("addExpressionType(name,fn) failed. Expressiontype "+e+" already exists an can not be overwritten. Please choose another name");r(this).expressionTypes[e]=t},expressionTypeJs:t,expressionTypeJsTemplateString:n}),a({name:"inputElementCheckboxes",bindTo:'input[data-model][type="checkbox"]',expressions:e=>e.dataset.model,onChange(e,t,{property:n,value:s}){s?e.setAttribute("checked","checked"):e.removeAttribute("checked")}}),a((function(){return{bindTo:'[data-model]:not([type="radio"])',expressions:e=>e.dataset.model,onChange(e,t,{property:n,value:s}){e.value=s}}})),a((function(){return{bindTo:'input[data-model][type="radio"]',expressions:e=>e.dataset.model,onChange(e,t,{property:n,value:s}){e.value==s&&e.setAttribute("checked","checked")}}})),a((function(){return{bindTo:"[data-bind]",expressions:e=>e.dataset.bind,onChange(e,t,n){e.innerHTML=t}}})),a((function(){return{expressions:e=>e.dataset.class,bindTo:"[data-class]",onChange(e,t,n){"object"==typeof t?Object.keys(t).forEach(n=>{t[n]?e.classList.add(n):e.classList.remove(n)}):e.setAttribute("class",t)}}})),a((function(){return{bindTo:"[data-style]",expressions:e=>e.dataset.style,onChange(e,t,n){"object"==typeof t?Object.keys(t).forEach(n=>{e.style[n]=t[n]}):e.setAttribute("style",t)}}})),a((function(){return{bindTo:()=>Array.from(document.querySelectorAll("*")).filter(e=>Object.keys(e.dataset).filter(e=>e.startsWith("style.")).length>0),expressions:e=>Object.keys(e.dataset).filter(e=>e.startsWith("style.")).map(t=>e.dataset[t]),onChange(e,t,{property:n}){e.style[n]=t}}})),a((function(){return{bindTo:Array.from(document.querySelectorAll("*")).filter(e=>Object.keys(e.dataset).filter(e=>e.startsWith("class.")).length>0),expressions:e=>Object.keys(e.dataset).filter(e=>e.startsWith("class.")).map(t=>({computation:e.dataset[t],classname:t.replace("class.","")})),onChange(e,t,{property:n,value:s,computation:o}){t?e.classList.add(o.classname):e.classList.remove(o.classname)}}})),a((function({data:e,state:t}){const n=document.querySelectorAll('[data-model]:not([type="checkbox"])'),s=document.querySelectorAll('input[data-model][type="checkbox"]');for(let e of n)e.addEventListener("keyup",(function(){const n=e.dataset.model;t[n]=e.value})),e.addEventListener("change",(function(){const n=e.dataset.model;t[n]=e.value}));for(let e of s)e.addEventListener("change",(function(){const n=e.dataset.model;t[n]=e.checked}))})),a((function(){return{bindTo:"data-show",expressions:e=>e.dataset.show,onChange(e,t){e.style.display=t?"block":"none"}}})),o}();
